variables:
  gfe_id: 380
  testgen_id: 273
  PERSONAL_ACCESS_TOKEN: "warning! If you can see this, I have not been set in the CI/CD Variables UI"

default:
  before_script:
    - |
      set +e
      eval $(ssh-agent -s)
      ssh-add <(echo "$SSH_PRIVATE_KEY")

      export RISCV=/opt/riscv
      export PATH=/opt/riscv/bin:$PATH
      export PATH=/opt/Xilinx/Vivado/2019.1/bin:/opt/Xilinx/Vivado_Lab/2019.1/bin:$PATH
      source /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
      source /opt/Xilinx/Vivado_Lab/2019.1/settings64.sh
      export XILINXD_LICENSE_FILE=/opt/Xilinx/Xilinx.lic
    - |
      # Sanity check
      nix-shell --command 'which vivado_lab'

trigger_gfe:
  stage: deploy
  tags: ["nix"]
  # pipeline type of full will cause gfe to trigger testgen if it succeeds.
  script:
    - export gfe_rev=$(nix eval '(import ./shell.nix {}).besspin.gfeSrc.modules.".".rev' | sed 's/"//g')
    - export testgen_rev=$(nix eval '(import ./shell.nix {}).besspin.testgenSrc.modules.".".rev' | sed 's/"//g')
    - >-
      export tool_suite_url="${CI_PROJECT_URL#*.com/}"
    - >-
      export tool_suite_url="git@gitlab-ext.galois.com:${tool_suite_url}.git"

    - >-
      curl -XPOST -H "PRIVATE-TOKEN: $PERSONAL_ACCESS_TOKEN"
      "$CI_API_V4_URL/projects/$gfe_id/repository/tags?tag_name=ref-$gfe_rev&ref=$gfe_rev"

    - >-
      curl -XPOST -H "PRIVATE-TOKEN: $PERSONAL_ACCESS_TOKEN"
      "$CI_API_V4_URL/projects/$testgen_id/repository/tags?tag_name=ref-$testgen_rev&ref=$testgen_rev"

    - >-
      curl -XPOST -H "PRIVATE-TOKEN: $PERSONAL_ACCESS_TOKEN"
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/tags?tag_name=ref-$CI_COMMIT_SHA&ref=$CI_COMMIT_SHA"

    - |
      for pid in $gfe_id $testgen_id $CI_PROJECT_ID; do
        ids=($(nix run nixpkgs.jq nixpkgs.curl -c bash -c "curl -H \"PRIVATE-TOKEN: $PERSONAL_ACCESS_TOKEN\" \"$CI_API_V4_URL/projects/$pid/pipelines?scope=tags\" | jq '.[].id' "))
        for id in "${ids[@]}"; do
          curl -XPOST -H "PRIVATE-TOKEN: $PERSONAL_ACCESS_TOKEN" "$CI_API_V4_URL/projects/$pid/pipelines/$id/cancel"
        done
      done

    - >-
      curl -XPOST
      -F "token=$GFE_TRIGGER"
      -F "ref=ref-$gfe_rev"
      -F "variables[PIPELINE_TYPE]=full"
      -F "variables[testgen_ref]=ref-$testgen_rev"
      -F "variables[testgen_id]=$testgen_id"
      -F "variables[tool_suite_url]=$tool_suite_url"
      -F "variables[tool_suite_rev]=ref-$CI_COMMIT_SHA"
      "$CI_API_V4_URL/projects/$gfe_id/trigger/pipeline"

compare_outputs:
  tags: ["nix"]
  only:
    refs:
      - merge_requests
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
  script:
    - python3 ./scripts/testing/test_tutorial.py
    - ./scripts/testing/compare_outputs.sh

CHSL_P1_Coremark:
  stage: .post
  tags: ["nix"]
  script:
    - echo "Running Coremark for Chisel P1"
    - >-
      nix-shell --command '
      besspin-unpack-coremark-builds;
      gfe-run-elf chisel_p1 --elf coremark-builds/coremark-p1.bin --timeout 60 --expected "Correct operation validated" --absent "Errors detected"'

BSV_P1_Coremark:
  stage: .post
  tags: ["nix"]
  script:
    - echo "Running Coremark for Bluespec P1"
    - >-
      nix-shell --command '
      besspin-unpack-coremark-builds;
      gfe-run-elf bluespec_p1 --elf coremark-builds/coremark-p1.bin --timeout 60 --expected "Correct operation validated" --absent "Errors detected"'

CHSL_P2_Coremark:
  stage: .post
  tags: ["nix"]
  script:
    - echo "Running Coremark for Chisel P2"
    - >-
      nix-shell --command '
      besspin-unpack-coremark-builds;
      gfe-run-elf chisel_p2 --elf coremark-builds/coremark-p2.bin --timeout 60 --expected "Correct operation validated" --absent "Errors detected"'

BSV_P2_Coremark:
  stage: .post
  tags: ["nix"]
  script:
    - echo "Running Coremark for Bluespec P2"
    - >-
      nix-shell --command '
      besspin-unpack-coremark-builds;
      gfe-run-elf bluespec_p2 --elf coremark-builds/coremark-p2.bin --timeout 60 --expected "Correct operation validated" --absent "Errors detected"'
      
CHSL_P3_Coremark:
  stage: .post
  tags: ["nix"]
  script:
    - echo "Running Coremark for Chisel P3"
    - >-
      nix-shell --command '
      besspin-unpack-coremark-builds;
      gfe-run-elf chisel_p3 --elf coremark-builds/coremark-p3.bin --timeout 60 --expected "Correct operation validated" --absent "Errors detected"'
